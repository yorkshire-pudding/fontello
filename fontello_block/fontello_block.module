<?php

/**
 * Implements hook_permissions().
 */
function fontello_block_permission() {
  return array(
    'administer block icons' => array(
      'title' => t('Administer block icons'),
      'description' => t('Administer block icon settings.'),
    ),
  );
}

/**
 * Helper function to return the default Fontello block values.
 */
function fontello_block_defaults() {
  return array(
    'icon' => '',
    'position' => 'title_before',
  );
}
/*
 * Extend block's classes with any user defined classes.
 */
function fontello_block_preprocess_block(&$variables) {
  $block = &$variables['block'];
  $fontello = isset($block->fontello) ? unserialize($block->fontello) : array();
  if (empty($fontello)) {
    $fontello = fontello_block_defaults();
  }
  $icons = fontello_get_icons();
  if (!empty($fontello['icon']) && isset($icons[$fontello['icon']])) {
    $icon = theme('fontello_icon', array('icon' => $icons[$fontello['icon']]));
    switch ($fontello['position']) {
      case 'title_before': $variables['title_prefix'][] = array('#markup' => $icon); break;
      case 'title_after': $variables['title_suffix'][] = array('#markup' => $icon); break;
      case 'title_inside_before': $block->subject = $icon . $block->subject; break;
      case 'title_inside_after': $block->subject .= $icon; break;
      case 'content_before': $variables['content'] = $icon . $variables['content']; break;
      case 'content_after': $variables['content'] .= $icon; break;
    }
  }
}

/**
 * Alter block edit form
 */
function fontello_block_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  if (($form_id == 'block_admin_configure' || $form_id == 'block_add_block_form') && user_access('administer block icons', $user)) {
    $block = block_load($form['module']['#value'], $form['delta']['#value']);
    $fontello = isset($block->fontello) ? unserialize($block->fontello) : array();
    if (empty($fontello)) {
      $fontello = fontello_block_defaults();
    }
    $form['settings']['fontello'] = array(
      '#type' => 'fieldset',
      '#title' => t('Insert Icon'),
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
      '#tree' => TRUE,
    );
    // Add in the icon select field.
    fontello_form_icon_select($form['settings']['fontello'], $fontello['icon'], 'fontello');
    // Additional configuration on where to place the icon in the block.
    $icon_state = array('invisible' => array(':input[name="fontello[icon]"]' => array('value' => '')));
    $form['settings']['fontello']['position'] = array(
      '#type' => 'select',
      '#title' => t('Render icon:'),
      '#options' => array(
        'title_before' => t('Before title'),
        'title_after' => t('After title'),
        'title_inside_before' => t('Before title (inside markup)'),
        'title_inside_after' => t('After title (inside markup)'),
        'content_before' => t('Before content'),
        'content_after' => t('After content'),
      ),
      '#default_value' => $fontello['position'],
      '#states' => $icon_state,
    );
    $form['#submit'][] = 'fontello_block_form_submit';
  }
}


/**
 * Save supplied class.
 */
function fontello_block_form_submit($form, &$form_state) {
  if ($form_state['values']['form_id'] == 'block_admin_configure' || $form_state['values']['form_id'] == 'block_add_block_form') {
    $module = $form_state['values']['module'];
    $delta = $form_state['values']['delta'];
    // Update block Fontello settings.
    if (isset($form_state['values']['fontello'])) {
      db_merge('block')->key(array('module' => $module, 'delta' => $delta))->fields(array('fontello' => serialize($form_state['values']['fontello'])))->execute();
    }
  }
}
